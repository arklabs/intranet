<?php

/**
 * Event
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    intranet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Event extends BaseEvent
{
    public function getAsigned(){
         $user = $this->getDmUser();
         return $user[0]->__toString();
    }
    public function  __toString() {
        return sprintf('%s #%s - %s', $this->getEventCategory(), $this->getId(), ($this->getAddressId())?$this->getAddress():$this->getProperty()->getAddress());
    }
    public function buildEventInformationBasics(){
      //  style label.green also available in tipsy-addons.css
      $info = '';
      $context = sfContext::getInstance();
      
      $info.= $context->getHelper()->tag('h3 style="color: white important!;"', $this);

      $marketer = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Marcador: ').$this->getCreatedBy());
      $contact = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Contacto: ').$this->getCreatedAt());

      $startDate = explode(' ', $this->getDateStart()); $startHour = $startDate[1];$startDate = $startDate[0];
      $endDate = explode(' ', $this->getDateEnd()); $endHour = $endDate[1];$endDate = $endDate[0];

      $date = (($startDate != $endDate)?$startDate.' - '.$endDate: $startDate);
      $hour = (($startHour != $endHour)?$startHour.' - '.$endHour: $startHour);
      $fecha = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Fecha: ').$date);
      $hora = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Hora: ').$hour);

      $address = (!is_null($this->getAddress()) && trim(str_replace(',', '', $this->getAddress()))!='')?$this->getAddress():$this->getProperty()->getAddress();
      $address = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Direcci&oacute;n: ').$address);
      $cell = $context->getHelper()->tag('label.red', $context->getHelper()->tag('b', 'Cell: ').$this->getClient()->getPhone());
      $home = $context->getHelper()->tag('label.red', $context->getHelper()->tag('b', 'Casa: ').$this->getClient()->getHomePhone());
      $compro = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Compr&oacute;: ').$this->getProperty()->getBroughtYear());
      $refinancio = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Modific&oacute;: ').$this->getProperty()->getRefinantiedYear());
      $parcela = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Parcela: ').$this->getProperty()->getParcel());
      $sqft = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Pies Cuad: ').$this->getProperty()->getSqft());
      $lote = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Lote: ').$this->getProperty()->getLote());
      $yearBuilt = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'A&ntilde;o Const: ').$this->getProperty()->getYearBuilt());
      $rooms =$context->getHelper()->tag('label',  $context->getHelper()->tag('b', 'Cuartos: ').$this->getProperty()->getRoomsNumber());
      $bath = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Ba&ntilde;os: ').$this->getProperty()->getBathRoomsNumber());
      $yearsOnProp = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'A&ntilde;os en Prop: ').$this->getProperty()->getYearsOnProperty());
      $peopOnProp = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Pers en Prop: ').$this->getProperty()->getPeopleOnProperty());
      $cliente =  $context->getHelper()->tag('label.red', $context->getHelper()->tag('b', 'Cliente: ').$this->getClient());
      $estimatedValue = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Valor Estimado: ').$this->getProperty()->getEstimatedCurrentValue());
      $detalles= $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Detalles: ')).$context->getHelper()->tag('p',$this->getDescription());

      // Info de Hipotecas

      
      $table = $context->getHelper()->table('v-align=top')->head('','');
      $table->body($marketer, $contact);
      $table->body($fecha, $hora);
      $table->body($cell,$home );
      $table->body($cliente, $yearsOnProp);
      $table->body($address, $parcela);
      $table->body($sqft, $lote);
      $table->body($rooms, $bath);
      $table->body($yearBuilt, $compro );
      $table->body($refinancio, $estimatedValue);
      
      $table->body($detalles,'');

      $hipotecas = (count($this->getProperty()->PropertyPayment))?'':'<h4 style="color: red">No tiene hipotecas</h4>';
      $i = 1;
      foreach ($this->getProperty()->PropertyPayment as $hipoteca){
        $hipotecas.= sprintf('<h4>Hipoteca #%s</h4>', $i);

        $loanNr = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Nro Pr&eacute;stamo: ').$hipoteca->getLoanNr());
        $bank = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Banco: ').$hipoteca->getBank());
        $debe = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Debe: ').$hipoteca->getCurrentDebt().' - '.$hipoteca->getLoanRateType());
        $tipoPago = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Tipo Pago: ').$hipoteca->getLoanRateType());
        $tipoPrestamo = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Tipo Pr&eacute;stamo: ').$hipoteca->getPropertyLoanTime().' a&ntilde;os');
        $pays = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Paga: ').$hipoteca->getPayment().($hipoteca->getTaxesIncludedInPayment()?' + Taxes y Aseg.':''));
        $tasa = $context->getHelper()->tag('label', $context->getHelper()->tag('b', 'Inter&eacute;s: ').round($hipoteca->getTasa(), 1).'%');

        $hTable = $context->getHelper()->table('v-align=top')->head('','');
        $hTable->body($bank, $loanNr);
        $hTable->body($debe, $tipoPago);
        $hTable->body($tipoPrestamo, $pays);
        $hTable->body($tasa, '');
        $hipotecas.= $hTable;
        $hipotecas.= '<br/>';
        $i++;
      }
      return $info.$table.$hipotecas;
  }
}
