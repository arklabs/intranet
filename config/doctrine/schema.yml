DmUser:
  actAs:    [Timestampable, DmBlameable]
  columns:
    first_name:   { type: string(32), notnull: true }
    last_name:     { type: string(32), notnull: true }
    phone:         { type: string(32) }

Client:
  inheritance:
    extends: DmUser
    type: column_aggregation
    keyField: type
    keyValue: Client
  columns:
    home_phone:   { type: string(32)}
    licence:      { type: string(32)}
    assigned_to:  { type: integer   }
    ssn:          { type: string(32)}
    dob:          { type: timestamp }
    source_id:    { type: integer }
  relations:
    Source:
      local:        source_id
      foreign:      id
      type: one 
    Agent:
      local:    assigned_to
      foreign:  id
      onDelete: RESTRICT
      foreignAlias: Clients
    Advise:
      class: FileType
      local: client_id
      foreign: file_type_id
      refClass: Advise
      foreignAlias: Clients

Agent:
  inheritance:
    extends: DmUser
    type: column_aggregation
    keyField: type
    keyValue: Agent
Telemarker:
  inheritance:
    extends: DmUser
    type: column_aggregation
    keyField: type
    keyValue: Telemarker

ZipCode:
  columns:
    zip_code:     { type: integer, notnull: true }
    place_name:   { type: string(255) }
    country_code: { type: string(2)   }
    state_code:   { type: string(2)   }
    state_name:   { type: string(255) }
    localty_name:  { type: string(255) }
Address:
  columns:
    address:      { type: string(255), notnull: true  }
    zip_code:     { type: integer, notnull: true      }
    place_name:   { type: string(255)                 }
    country_code: { type: string(2)                   }
    state_code:   { type: string(2)                   }
    state_name:   { type: string(255)                 }
PropertyList:
  actAs: [Timestampable, DmVersionable, DmBlameable]
  columns: 
    address_id:                     { type: integer, notnull: true  }
    parcel:                         { type: integer     }
    rooms_number:                   { type: integer     }
    bath_rooms_number:              { type: integer     }
    sqft:                           { type: integer     }
    lote:                           { type: integer     }
    year_built:                     { type: integer(4)  }
    property_type_id:               { type: integer     }
  relations:
    Address:
      local: address_id
      foreign: id
      type: one
    PropertyCondition:
      class:  PropertyCondition
      refClass:  ConditionSent
    PropertyType:
      local:      property_type_id
      foreign:    id
      type: one
PropertyOnSell:
  inheritance:
    extends: PropertyList
    type: column_aggregation
    keyField: type
    keyValue: PropertyOnSell
  columns:
    price:        { type: integer}
    mls:          { type: string(10) }
    agent_id:     { type: integer }
    ref_agent_id: { type: integer }
    hoa:          { type: enum, values: [NO, YES]}
    ss:           { type: enum, values: [NO, YES]}
    apr:          { type: enum, values: [NO, YES]}
    comments:     { type: clob}
    status:       { type: enum, values: [ON SALE, IN SCROW, SOLD, ON HOLD, CANCELLED]}
  relations:
    Agent:
      local: agent_id
      foreign: id
      type: one
    RefAgent:
      class: Agent
      foreign: id
      local: ref_agent_id
      type: one
PropertyLoanTime:
  columns:
    name: { type: string(255), notnull: true }
PropertyPayment:
  columns:
    property_id:                    { type: integer, notnull: true }
    bank_id:                        { type: integer     }
    payment:                        { type: float       }
    taxes_included_in_payment:      { type: boolean     }
    property_loan_rate_type_id:     { type: integer     }
    loan_time_id:                   { type: integer     }
    loan_nr:                        { type: integer     }
    current_debt:                   { type: float       }
    tasa:                           { type: float       }
  relations:
    PropertyLoanTime:
      local: loan_time_id
      foreign: id
      type: one
    Property:
      class: PropertyList
      local: property_id
      foreign: id
    LoanRateType:
      local:      property_loan_rate_type_id
      foreign:    id
      type: one
    Bank:
      local:  bank_id
      foreign:  id
      onDelete: RESTRICT
Property:
  inheritance:
    extends: PropertyList
    type: column_aggregation
    keyField: type
    keyValue: Property
  columns:
    client_id:                      { type: integer     }
    years_on_property:              { type: integer(3)  }
    people_on_property:             { type: integer(2)  }
    rent_amount_received:           { type: float       }
    refinantied_year:               { type: string(4)   }
    brought_year:                   { type: string(4)   }
    estimated_current_value:        { type: float       }
    property_use_id:                { type: integer     }
  relations:
    PropertyUse:
      local:      property_use_id
      foreign:    id
      type: one
    Client:
      local:      client_id
      foreign:    id
      onDelete:   CASCADE
LoanRateType:
  columns:
    name: { type: string(64)}
PropertyUse:
  columns:
    name: { type: string(64)}
PropertyType:
  columns:
    name: { type: string(64)}
PropertyTransaction:
  columns:
    name: { type: string(255), notnull: true }
PropertyCondition:
  columns:
    name: { type: string(255), notnull: true }
ConditionSent:
  actAs: [Timestampable, DmVersionable]
  columns:
    property_list_id: { type: integer, notnull: true }
    property_condition_id: { type: integer, notnull: true }
  relations:
    PropertyList:
      local: property_list_id
      foreign: id
    PropertyCondition:
      local: property_condition_id
      foreign: id
State:
  columns:
    name:
      type: string(32)
      notnull: true
City:
  columns:
    state_id:     { type: integer, notnull: true }
    name:         { type: string(64), notnull: true }
  relations:
    State:
      local:    state_id
      foreign:  id
      type: one 
Department:
  columns:
    name: { type: string(255), notnull: true }
    css_class_list:   { type: string(255), notnull: false }
    
ClientFile:
  actAs: [Dmblameable, DmVersionable]
  columns:
    client_id:        { type: integer, notnull: true }
    department_id:    { type: integer, notnull: true }
    assigned_to:      { type: integer, notnull: true }
    file_type:        { type: integer, notnull: true }
    date_start:       { type: timestamp, notnull: true }
    date_end:         { type: timestamp, notnull: true }
    description:      { type: clob, extra: markdown }
    is_active:        { type: boolean, notnull: true, default: false }
  relations:
    Client:
      local:      client_id
      foreign:    id
      onDelete:   CASCADE
    Agent:
      local:      assigned_to
      foreign:    id
      onDelete:   RESTRICT
    FileType:
      local:      file_type
      foreign:    id
      onDelete:   RESTRICT
    Department:
      local:      department_id
      foreign:    id
      onDelete:   RESTRICT
FileType:
  columns:
    name:           { type: string(64), notnull: true }
    css_class_list:  { type: string(255), notnull: false }
Comment:
  actAs:              [ Timestampable ]
  columns:
    client_file_id:   { type: integer, notnull: true }
    dm_user_id:       { type: integer }
    text:             { type: clob }
    is_active:        { type: boolean, notnull: true, default: true }
  relations:
    ClientFile:
      foreignAlias:   Comments
      onDelete:       CASCADE
    DmUser:
      local:          dm_user_id
      foreign:        id
      onDelete:       CASCADE
Bank:
  columns:
    name:     { type: string(64), notnull: true }
CompanySector:
  columns:
    name:     { type: string(64), notnull: true }
Company:
  columns:
    name:         { type: string(64), notnull: true }
    address_id:   { type: integer }
    phone:        { type: string(32) }
    fax:          { type: string(32) }
    sector_id:    { type: integer    }
    web_site:     { type: string(255)}
  relations:
    CompanySector:
      local: sector_id
      foreign: id
      type: one 
    Address:
      local: address_id
      foreign: id
      type: one

Employment:
  columns:
    ocupation:          { type: string(255), notnull: true}
    month_income:       { type: float                     }
    client_id:          { type: integer, notnull: true    }
    company_id:         { type: integer, notnull: true    }
    date_start:         { type: timestamp }
    date_end:           { type: timestamp }
  relations:
    Client:
      local:    client_id
      foreign:  id
      onDelete: CASCADE
    Company:
      local:    company_id
      foreign:  id
      onDelete: CASCADE

Expense:
  columns:
    name:               { type: string(64), notnull: true }

Income:
  columns:
    name:               { type: string(64), notnull: true }

ClientExpense:
  columns:
    client_id:          { type: integer, notnull: true }
    expense_id:         { type: integer, notnull: true }
    amount:             { type: float, notnull: true }
    payment:            { type: float, notnull: true }
    comments:           { type: clob }
    loan_time_id:       { type: integer }
  relations:
    PropertyLoanTime:
      local: loan_time_id
      foreign: id
      type: one 
    Client:
      local:      client_id
      foreign:    id
      onDelete:   CASCADE
    Expense:
      local:      expense_id
      foreign:    id
      onDelete:   CASCADE

ClientIncome:
  columns:
    client_id:      { type: integer, notnull: true }
    income_id:      { type: integer, notnull: true }
    month_income:   { type: float, notnull: true }
    comments:       { type: clob }
  relations:
    Client:
      local:      client_id
      foreign:    id
      onDelete:   CASCADE
    Income:
      local:      income_id
      foreign:    id
      onDelete:   CASCADE

Asset:
  columns:
    name:               { type: string(64), notnull: true }

ClientAsset:
  columns:
    client_id:          { type: integer, notnull: true }
    asset_id:           { type: integer, notnull: true }
    estimated_value:    { type: float }
  relations:
    Client:
      local:      client_id
      foreign:    id
      onDelete:   CASCADE
    Asset:
      local:      asset_id
      foreign:    id
      onDelete:   CASCADE

Liabilities:
  columns:
    name:               { type: string(64), notnull: true }

ClientLiabilities:
  columns:
    client_id:          { type: integer, notnull: true }
    liabilities_id:     { type: integer, notnull: true }
    monthly_payment:    { type: float }
    balance_due:        { type: float }
  relations:
    Client:
      local:      client_id
      foreign:    id
      onDelete:   CASCADE
    Liabilities:
      local:      liabilities_id
      foreign:    id
      onDelete:   CASCADE

IncommingCall:
  actAs: [Timestampable, DmBlameable, DmTaggable]
  columns:
    first_name:    { type: string(255), notnull: true }
    last_name:     { type: string(255), notnull: true }
    cel:           { type: string(25)}
    home_phone:    { type: string(25)}
    comments:      { type: clob }
IncommingCallInventrary:
  inheritance:
    extends: IncommingCall
    type: column_aggregation
    keyField: type
    keyValue: IncommingCallInventrary
  columns:
    property_id: { type: integer }
    caller_id:   { type: integer }
  relations:
    PropertyOnSell:
      local: property_id
      foreign: id
      type: one
    IncommingCallUsualCallers:
      local: caller_id
      foreign: id
      type: one
IncommingCallRealState:
  inheritance:
    extends: IncommingCall
    type: column_aggregation
    keyField: type
    keyValue: IncommingCallRealState
  columns:
    agent_id:    { type: integer }
    caller_id:   { type: integer }
    transaction_id: { type: integer }
  relations:
    Agent:
      local: agent_id
      foreign: id
      type: one
    IncommingCallUsualCallers:
      local: caller_id
      foreign: id
      type: one
    PropertyTransaction:
      local: transaction_id
      foreign: id
      type: one
IncommingCallActiveMod:
  inheritance:
    extends: IncommingCall
    type: column_aggregation
    keyField: type
    keyValue: IncommingCallActiveMod
  columns:
    property_id: { type: integer }
    agent_id:    { type: integer }
    caller_id:   { type: integer }
    reason_id:   { type: integer }
  relations:
    PropertyList:
      local: property_id
      foreign: id
      type: one
    Agent:
      local: agent_id
      foreign: id
      type: one
    IncommingCallUsualCallers: 
      local: caller_id
      foreign: id 
      type: one 
    IncommingCallReason:
      local: reason_id
      foreign: id
      type: one
IncommingCallProspect:
  inheritance:
    extends: IncommingCall
    type: column_aggregation
    keyField: type
    keyValue: IncommingCallProspect
  columns:
    source_id: { type: integer }
  relations:
    Source:
      local: source_id
      foreign: id
    FileType:
      class: FileType
      refClass: IncommingCallProspectInterest
IncommingCallProspectInterest:
  columns:
     incomming_call_prospect_id: {type: integer }
     file_type_id: {type: integer }
  relations:
    IncommingCallProspect:
      local: incomming_call_prospect_id
      foreign: id
    FileType:
      local: file_type_id
      foreign: id
IncommingCallUsualCallers:
  columns:
    name: { type: string(255), notnull: true }
IncommingCallReason: 
  columns: 
    name: 			 { type: string(255), notnull: true}
Source:
  columns:
    name:       { type: string(64), notnull: true }
EventRoot:
  actAs:   [Timestampable, DmTaggable, DmBlameable, DmVersionable]
  columns:
    date_start:       { type: timestamp, notnull: true    }
    date_end:         { type: timestamp, notnull: true 	  }
    description:      { type: clob, notnull: true         }
    is_active:        { type: boolean, notnull: true, default: true }
    is_new:           { type: boolean, default: true, notnull: true }
    address_id:       { type: integer, notnull: false }
    dm_user_id:       { type: integer, notnull: false     }
    category_id:      { type: integer, notnull: true      }
    status_id:        { type: integer, notnull: true      }
  relations:
    Address:
      local: address_id
      foreign: id
      type: one
    DmUser:
      local: dm_user_id
      foreign: id
      type: many
      onDelete: CASCADE
      foreignAlias: Events
    EventCategory:
      local:    category_id
      foreign:  id
      onDelete: RESTRICT
    EventStatus:
      local:    status_id
      foreign:  id
      onDelete: RESTRICT
EventPublic:
  inheritance:
    extends: EventRoot
    type: column_aggregation
    keyField: type
    keyValue: Public Event
Event:
  inheritance:
    extends: EventRoot
    type: column_aggregation
    keyField: type
    keyValue: Cita
  columns:
    client_id:        { type: integer 					     }
    property_id:      { type: integer, notnull: true }
    phraseology_id:   { type: integer 					     }
    service_id:       { type: integer, notnull: true }
  relations:
    FileType:
      local: service_id
      foreign: id
      type: one
    Property:
      local: property_id
      foreign: id
    Phraseology:
      local: phraseology_id
      foreign: id
      onDelete: RESTRICT
    Client:
      local: client_id
      foreign: id
      onDelete: SET NULL
    SignedDocument:
      class:     Document
      refClass:  EventSignedDocument
    GettedDocument:
      class:     Document
      refClass:  EventGettedDocument
EventGettedDocument:
  columns:
    event_id:         { type: integer, notnull: true       }
    document_id:      { type: integer, notnull: true       }
  relations:
    Document:
      local: document_id
      foreign: id
    Event:
      local: event_id
      foreign: id
EventSignedDocument:
  columns:
    event_id:         { type: integer, notnull: true       }
    document_id:      { type: integer, notnull: true       }
  relations:
    Document:
      local: document_id
      foreign: id
    Event:
      local: event_id
      foreign: id
Document:
  columns:
    name:             { type: string(255), notnull: true   }

EventFeedBack:
  actAs: [Timestampable, DmBlameable]
  columns:
    event_id:         { type: integer, notnull: true      }
    comments:         { type: clob, notnull: true         }
  relations:
    Event:
      local: event_id
      foreign: id
      type: one 
EventCategory:
  columns:
    name:             { type: string(128), notnull: true  }
    css_class_list:   { type: string(255), notnull: false }
  relations: 
    EventStatus:
      class:  EventStatus
      refClass:  EventCategoryStatus

EventStatus:
  columns:
    name:             { type: string(128), notnull: true  }
    css_class_list:   { type: string(255), notnull: false }

EventCategoryStatus:
  columns:
    event_status_id:   { type: integer, notnull: true      }
    event_category_id: { type: integer, notnull: true      }
  relations: 
    EventStatus:
      local: event_status_id
      foreign: id
      onDelete: CASCADE
    EventCategory:
      local: event_category_id
      foreign: id
      onDelete: CASCADE
Phraseology:
  columns: 
    title: 			    { type: string(255), notnull: true  		}
    content:      		{ type: clob, notnull: true 				}
    pos_rank: 			{ type: integer, notnull: true, default: 0 	}
    neg_rank: 			{ type: integer, notnull: true, default: 0 	}
    is_active: 			{ type: boolean, default: true 				}

Advise: 
  columns:
    client_id:         { type: integer, notnull: true }
    file_type_id:      { type: integer, notnull: true }
  relations:
    Client:
      local: client_id
      foreign: id
      type: many
      onDelete: CASCADE
    ClientFile:
      local: file_type_id
      foreign: id
      type: many
      onDelete: SET NULL

Wallet:
  columns:
    owner:    { type: string(64), notnull: true }

CompanyExpenses:
  actAs:
    Timestampable: ~
  columns:
    wallet_id:      { type: integer, notnull: true }
    company_id:     { type: integer, notnull: true }
    expense_id:     { type: integer, notnull: true }
    amount:         { type: float, notnull: true }
    tax:            { type: float }
    payment:        { type: float }
    description:    { type: clob }
  relations:
    Wallet:
      local:      wallet_id
      foreign:    id
      onDelete:   CASCADE
    Company:
      local:      company_id
      foreign:    id
      onDelete:   CASCADE
    Expense:
      local:      expense_id
      foreign:    id
      onDelete:   CASCADE

CompanyRecurringExpenses:
  inheritance:
    extends: CompanyExpenses
    type: column_aggregation
  columns:
    enabled:  { type: boolean, notnull: true, default: false }
    max_occurrences: { type: integer(4) }
    must_occurrences: { type: integer(4) }
    every:    { type: integer, notnull: true } #Se efectua cada [every] [unit]
    Unit:     { type: enum, values: [Day, Week, Month, Year], notnull: true }
    next_on:  { type: date, default: NULL }
    last_execution_date: { type: date, default: NULL }
  relations:
    Wallet:
      local:      wallet_id
      foreign:    id
      onDelete:   CASCADE
    Company:
      local:      company_id
      foreign:    id
      onDelete:   CASCADE
    Expense:
      local:      expense_id
      foreign:    id
      onDelete:   CASCADE

Account:
  columns:
    wallet_id:  { type: integer, notnull: true }
    account_type_id: { type: integer, notnull: true }
    heading: { type: string(64), notnull: true }
    number:  { type: integer, notnull: true }
    bank_id: { type: integer, notnull: true }
    include_in_the_budget: { type: boolean, notnull: true }
    closed: { type: boolean, notnull: true, default: false }
    balance: { type: decimal }
    overdrawn: { type: decimal }
  relations:
    Bank:
      local:  bank_id
      foreign: id
      onDelete: RESTRICT
    Wallet:
      local:  wallet_id
      foreign: id
      onDelete: RESTRICT
    AccountType:
      local:  account_type_id
      foreign: id
      onDelete: RESTRICT

AccountType:
  columns:
    name:  { type: string(64), notnull: true }

Transaction:
  columns:
    date:  {type: date, notnull: true}
    amount: { type: decimal, notnull: true }
    type:   { type: enum, values: [Gasto, Ingreso], notnull: true }
    category_id: { type: integer, notnull: true }
    account_id: { type: integer, notnull: true }
    validated:  { type: boolean, notnull: true, default: false }
    payment_id:     { type: integer, notnull: true }
    payee_id:   { type: integer }
    description: { type: clob }
  relations:
    Category:
      local:  category_id
      foreign: id
      onDelete: RESTRICT
    Account:
      local:  account_id
      foreign: id
      onDelete: CASCADE
    Payment:
      local:  payment_id
      foreign: id
      onDelete: RESTRICT
    Payee:   #Beneficiario
      local:  payee_id
      foreign: id
      onDelete: Restrict

AutomatedTransaction:
  inheritance:
    extends: Transaction
    type: column_aggregation
    keyField: type
    keyValue: AutomatedTransaction
  columns:
    enabled:  { type: boolean, notnull: true, default: false }
    max_ocurrences:  { type: integer }
    every:    { type: integer, notnull: true }
    Unit:     { type: enum, values: [Day, Week, Month, Year], notnull: true }
    next_on:  { type: date }

Payee:
  columns:
    name:  {type: string(64), notnull: true}

Payment:
  columns:
    name:  {type: string(64), notnull: true}

Category:
  columns:
    wallet_id:  { type: integer, notnull: true }
    name:   { type: string(64), notnull: true }
    income: { type: boolean, notnull: true, default: false }
    parent_category:  { type: integer, notnull: false, default: null }
  relations:
    Wallet:
      local:  wallet_id
      foreign: id
      onDelete: CASCADE
